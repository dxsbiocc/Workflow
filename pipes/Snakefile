import os
import json
import getpass
import pandas as pd
from snakemake.utils import min_version


# snakemake built-in report function requires min version 5.1
min_version("7.12.0")

configfile: os.path.join(workflow.basedir, "../config/config.yaml")

# project dir
PATH = config.get('root_dir')
# ---------------------- prepare data ---------------------- #
include: os.path.join(PATH, "rules/common/prepare.smk")
# ---------------------- include rules --------------------- #
# ATAC-seq„ÄÅCut&Tag
if PIPELINE in ['ATAC-seq', 'Cut&Tag', 'ChIP-seq']:
    include: os.path.join(PATH, "rules/ATAC/ATAC.smk")
# DNA-seq
elif PIPELINE in ['WGS', 'WES']:
    include: os.path.join(PATH, "rules/DNA/DNA.smk")
# RNA-seq
elif PIPELINE == 'RNA-seq':
    include: os.path.join(PATH, "rules/RNA/RNA.smk")
elif PIPELINE == 'WGBS':
    pass
else:
    raise ValueError("")

onstart:
    if "verbose" in config and config["verbose"]:
        print("------------------------------ Workflow Parameters ------------------------------")
        print("Workflow:", PIPELINE)
        print("Sample list:", SAMPLES)
        print("Number of samples:", len(SAMPLES))
        print("-" * 80, "\n")

        print("---------------------------------- Environment ----------------------------------")
        print("Username: ", getpass.getuser())
        print("Project Directory:", os.path.abspath(PATH))
        print("Work Directory: ", config['workdir'])
        print("-" * 80, "\n")

rule all:
        input: rules.use_all.input

onsuccess:
    if "verbose" in config and config["verbose"]:
        print("\n---------------------------- Workflow finished successfully! ----------------------------\n")

onerror:
    print("\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ERROR in workflow !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n")