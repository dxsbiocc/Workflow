import os
import json
import getpass
import pandas as pd
from os.path import join as opj
from snakemake.utils import min_version


# snakemake built-in report function requires min version 5.1
min_version("7.12.0")

configfile: os.path.join(workflow.basedir, "../config/config.yaml")

# project dir
PATH = config.get('root_dir')
# ---------------------- prepare data ---------------------- #
include: os.path.join(PATH, "rules/common/prepare.smk")
# ---------------------- include rules --------------------- #
# ATAC-seq„ÄÅCut&Tag
if PIPELINE in ['ATAC-seq', 'Cut&Tag', 'ChIP-seq']:
    include: os.path.join(PATH, "rules/ATAC/ATAC.smk")
elif PIPELINE in ['WGS', 'WES']:  # DNA-seq, targeted sequencing
    include: os.path.join(PATH, "rules/DNA/DNA.smk")
elif PIPELINE == 'RNA-seq':       # RNA-seq
    include: os.path.join(PATH, "rules/RNA/RNA.smk")
elif PIPELINE == 'WGBS':
    include: os.path.join(PATH, "rules/WGBS/WGBS.smk")
elif PIPELINE == 'HIC':
    include: os.path.join(PATH, "rules/HIC/HIC.smk")
elif PIPELINE == 'Assembly':
    include: os.path.join(PATH, "rules/Assembly/Assembly.smk")
else:
    raise ValueError("")

onstart:
    if "verbose" in config and config["verbose"]:
        print("Workflow Parameters".center(80, '-'))
        print("Workflow:", PIPELINE)
        print("Sample list:", DATA.index.tolist())
        print("Number of samples:", len(SAMPLES))
        print("-" * 81, "\n")

        print("Environment".center(80, '-'))
        print("Username: ", getpass.getuser())
        print("Project Directory:", os.path.abspath(PATH))
        print("Work Directory: ", config['workdir'])
        print("-" * 81, "\n")

rule all:
        input: 
            rules.use_all.input

onsuccess:
    if "verbose" in config and config["verbose"]:
        print("Workflow finished successfully!".center(80, '-'))

onerror:
    print(" ERROR in workflow ".center(80, '!'))